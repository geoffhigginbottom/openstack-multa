heat_template_version: 2014-10-16

description: Create Environment ready for installing OpenStack using OpenStack-Ansible  

parameters:
  image:
    type: string
    label: Image name or ID
    description: Image to be used for instances
    default: Ubuntu 16.04 LTS (Xenial Xerus) (PVHVM)

  controller_flavor:
    type: string
    label: Controller Flavor
    description: Type of instance (flavor) to be used for Controller Nodes
    default: 15GB Standard Instance

  compute_flavor:
    type: string
    label: Compute Flavor
    description: Type of instance (flavor) to be used for Compute Nodes
    default: 60 GB I/O v1

  ceph_flavor:
    type: string
    label: Ceph Flavor
    description: Type of instance (flavor) to be used for Ceph Nodes
    default: 60 GB I/O v1

  swift_flavor:
    type: string
    label: Swift Flavor
    description: Type of instance (flavor) to be used for Swift Nodes
    default: 8GB Standard Instance

  lb_flavor:
    type: string
    label: LB Flavor
    description: Type of instance (flavor) to be used for HA Proxy LB Nodes
    default: 4GB Standard Instance

  console_flavor:
    type: string
    label: Console Flavor
    description: Type of instance (flavor) to be used for the Console Node
    default: 4GB Standard Instance

  gw_flavor:
    type: string
    label: GW Flavor
    description: Type of instance (flavor) to be used for the GW Node
    default: 4GB Standard Instance

  bind_flavor:
    type: string
    label: Bind Flavor
    description: Type of instance (flavor) to be used for the Bind Node
    default: 4GB Standard Instance

  key_name:
    type: string
    label: Key-Name
    description: Name of key-pair to be used for instances
    default: GH-MBPro

# Parameters listed in the parameter_groups section will be displayed on the Horizon UI in the order listed and will
# enable users to modify the settings.  Parameters with default values will be auto completed but still editable,
# parameters without defaults will have to be completed at run time.  Parameters not listed will still be used 
# within the template, but not be available for edit at run time.
# All parameters can be updated when launching via the API

parameter_groups:
- label: Group Name
  description: Group Description
  parameters:
  - image
  - controller_flavor
  - compute_flavor
  - ceph_flavor
  - swift_flavor
  - lb_flavor
  - console_flavor
  - gw_flavor
  - key_name


resources:

# Volumes

  controller1_volume1:
    type: OS::Cinder::Volume
    properties:
      name: "controller1-volume1"
      size: 160
      volume_type: SSD

  controller2_volume1:
    type: OS::Cinder::Volume
    properties:
      name: "controller2-volume1"
      size: 160
      volume_type: SSD

  controller3_volume1:
    type: OS::Cinder::Volume
    properties:
      name: "controller3-volume1"
      size: 160
      volume_type: SSD

  compute1_volume1:
    type: OS::Cinder::Volume
    properties:
      name: "compute1-volume1"
      size: 500
      volume_type: SSD

  compute2_volume1:
    type: OS::Cinder::Volume
    properties:
      name: "compute2-volume1"
      size: 500
      volume_type: SSD

  compute3_volume1:
    type: OS::Cinder::Volume
    properties:
      name: "compute3-volume1"
      size: 500
      volume_type: SSD

  ceph1_volume1:
    type: OS::Cinder::Volume
    properties:
      name: "ceph1-volume1"
      size: 100
      volume_type: SSD

  ceph1_volume2:
    type: OS::Cinder::Volume
    properties:
      name: "ceph1-volume2"
      size: 100
      volume_type: SSD
  
  ceph1_volume3:
    type: OS::Cinder::Volume
    properties:
      name: "ceph1-volume3"
      size: 100
      volume_type: SSD
  
  ceph1_volume4:
    type: OS::Cinder::Volume
    properties:
      name: "ceph1-volume4"
      size: 100
      volume_type: SSD

  ceph1_volume5:
    type: OS::Cinder::Volume
    properties:
      name: "ceph1-volume5"
      size: 100
      volume_type: SSD

  ceph2_volume1:
    type: OS::Cinder::Volume
    properties:
      name: "ceph2-volume1"
      size: 100
      volume_type: SSD

  ceph2_volume2:
    type: OS::Cinder::Volume
    properties:
      name: "ceph2-volume2"
      size: 100
      volume_type: SSD
  
  ceph2_volume3:
    type: OS::Cinder::Volume
    properties:
      name: "ceph2-volume3"
      size: 100
      volume_type: SSD
  
  ceph2_volume4:
    type: OS::Cinder::Volume
    properties:
      name: "ceph2-volume4"
      size: 100
      volume_type: SSD

  ceph2_volume5:
    type: OS::Cinder::Volume
    properties:
      name: "ceph2-volume5"
      size: 100
      volume_type: SSD

  ceph3_volume1:
    type: OS::Cinder::Volume
    properties:
      name: "ceph3-volume1"
      size: 100
      volume_type: SSD

  ceph3_volume2:
    type: OS::Cinder::Volume
    properties:
      name: "ceph3-volume2"
      size: 100
      volume_type: SSD
  
  ceph3_volume3:
    type: OS::Cinder::Volume
    properties:
      name: "ceph3-volume3"
      size: 100
      volume_type: SSD
  
  ceph3_volume4:
    type: OS::Cinder::Volume
    properties:
      name: "ceph3-volume4"
      size: 100
      volume_type: SSD

  ceph3_volume5:
    type: OS::Cinder::Volume
    properties:
      name: "ceph3-volume5"
      size: 100
      volume_type: SSD

  swift1_volume1:
    type: OS::Cinder::Volume
    properties:
      name: "swift1-volume1"
      size: 80

  swift1_volume2:
    type: OS::Cinder::Volume
    properties:
      name: "swift1-volume2"
      size: 80
  
  swift1_volume3:
    type: OS::Cinder::Volume
    properties:
      name: "swift1-volume3"
      size: 80
  
  swift1_volume4:
    type: OS::Cinder::Volume
    properties:
      name: "swift1-volume4"
      size: 80

  swift1_volume5:
    type: OS::Cinder::Volume
    properties:
      name: "swift1-volume5"
      size: 80

  swift2_volume1:
    type: OS::Cinder::Volume
    properties:
      name: "swift2-volume1"
      size: 80

  swift2_volume2:
    type: OS::Cinder::Volume
    properties:
      name: "swift2-volume2"
      size: 80

  swift2_volume3:
    type: OS::Cinder::Volume
    properties:
      name: "swift2-volume3"
      size: 80

  swift2_volume4:
    type: OS::Cinder::Volume
    properties:
      name: "swift2-volume4"
      size: 80

  swift2_volume5:
    type: OS::Cinder::Volume
    properties:
      name: "swift2-volume5"
      size: 80

  swift3_volume1:
    type: OS::Cinder::Volume
    properties:
      name: "swift3-volume1"
      size: 80

  swift3_volume2:
    type: OS::Cinder::Volume
    properties:
      name: "swift3-volume2"
      size: 80

  swift3_volume3:
    type: OS::Cinder::Volume
    properties:
      name: "swift3-volume3"
      size: 80

  swift3_volume4:
    type: OS::Cinder::Volume
    properties:
      name: "swift3-volume4"
      size: 80

  swift3_volume5:
    type: OS::Cinder::Volume
    properties:
      name: "swift3-volume5"
      size: 80

# Networks

  encapsulation_network:
    type: Rackspace::Cloud::Network
    properties:
      cidr: 10.240.0.0/22
      label: "Encapsulation Network"

  mgmt_network:
    type: Rackspace::Cloud::Network
    properties:
      cidr: 172.29.236.0/22
      label: "Management Network"

  vxlan_network:
    type: Rackspace::Cloud::Network
    properties:
      cidr: 172.29.240.0/22
      label: "VXLAN Network"

  storage_network:
    type: Rackspace::Cloud::Network
    properties:
      cidr: 172.29.244.0/22
      label: "Storage Network"

  storage_replication_network:
    type: Rackspace::Cloud::Network
    properties:
      cidr: 172.29.248.0/22
      label: "Storage Replication Network"

  flat_network:
    type: Rackspace::Cloud::Network
    properties:
      cidr: 172.29.252.0/22
      label: "Flat Network"

# Servers

## Controller Nodes ##

  controller1:
    type: "OS::Nova::Server"
    properties:
      image: { get_param: image }
      flavor: { get_param: controller_flavor }
      key_name: { get_param: key_name }
      name: "controller1"
      networks:
        - uuid: 00000000-0000-0000-0000-000000000000
        - uuid: 11111111-1111-1111-1111-111111111111
        - uuid: { get_resource: encapsulation_network }
        - uuid: { get_resource: mgmt_network }
        - uuid: { get_resource: vxlan_network }
        - uuid: { get_resource: flat_network }
        - uuid: { get_resource: storage_network }
      config_drive: True
      user_data_format: RAW
    depends_on: controller1_volume1

  controller1_volume1_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: controller1 }
      mountpoint: /dev/xvdo
      volume_id: { get_resource: controller1_volume1 }
    depends_on: controller1

  controller2:
    type: "OS::Nova::Server"
    properties:
      image: { get_param: image }
      flavor: { get_param: controller_flavor }
      key_name: { get_param: key_name }
      name: "controller2"
      networks:
        - uuid: 00000000-0000-0000-0000-000000000000
        - uuid: 11111111-1111-1111-1111-111111111111
        - uuid: { get_resource: encapsulation_network }
        - uuid: { get_resource: mgmt_network }
        - uuid: { get_resource: vxlan_network }
        - uuid: { get_resource: flat_network }
        - uuid: { get_resource: storage_network }
      config_drive: True
      user_data_format: RAW
    depends_on: controller2_volume1

  controller2_volume1_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: controller2 }
      mountpoint: /dev/xvdo
      volume_id: { get_resource: controller2_volume1 }
    depends_on: controller2

  controller3:
    type: "OS::Nova::Server"
    properties:
      image: { get_param: image }
      flavor: { get_param: controller_flavor }
      key_name: { get_param: key_name }
      name: "controller3"
      networks:
        - uuid: 00000000-0000-0000-0000-000000000000
        - uuid: 11111111-1111-1111-1111-111111111111
        - uuid: { get_resource: encapsulation_network }
        - uuid: { get_resource: mgmt_network }
        - uuid: { get_resource: vxlan_network }
        - uuid: { get_resource: flat_network }
        - uuid: { get_resource: storage_network }
      config_drive: True
      user_data_format: RAW
    depends_on: controller3_volume1

  controller3_volume1_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: controller3 }
      mountpoint: /dev/xvdo
      volume_id: { get_resource: controller3_volume1 }
    depends_on: controller3

## Compute Nodes ##

  compute1:
    type: "OS::Nova::Server"
    properties:
      image: { get_param: image }
      flavor: { get_param: compute_flavor }
      key_name: { get_param: key_name }
      name: "compute1"
      networks:
        - uuid: 00000000-0000-0000-0000-000000000000
        - uuid: 11111111-1111-1111-1111-111111111111
        - uuid: { get_resource: encapsulation_network }
        - uuid: { get_resource: mgmt_network }
        - uuid: { get_resource: vxlan_network }
        - uuid: { get_resource: flat_network }
        - uuid: { get_resource: storage_network }
      config_drive: True
      user_data_format: RAW
    depends_on: compute1_volume1

  compute1_volume1_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: compute1 }
      mountpoint: /dev/xvdo
      volume_id: { get_resource: compute1_volume1 }
    depends_on: compute1

  compute2:
    type: "OS::Nova::Server"
    properties:
      image: { get_param: image }
      flavor: { get_param: compute_flavor }
      key_name: { get_param: key_name }
      name: "compute2"
      networks:
        - uuid: 00000000-0000-0000-0000-000000000000
        - uuid: 11111111-1111-1111-1111-111111111111
        - uuid: { get_resource: encapsulation_network }
        - uuid: { get_resource: mgmt_network }
        - uuid: { get_resource: vxlan_network }
        - uuid: { get_resource: flat_network }
        - uuid: { get_resource: storage_network }
      config_drive: True
      user_data_format: RAW
    depends_on: compute2_volume1

  compute2_volume1_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: compute2 }
      mountpoint: /dev/xvdo
      volume_id: { get_resource: compute2_volume1 }
    depends_on: compute2
  
  compute3:
    type: "OS::Nova::Server"
    properties:
      image: { get_param: image }
      flavor: { get_param: compute_flavor }
      key_name: { get_param: key_name }
      name: "compute3"
      networks:
        - uuid: 00000000-0000-0000-0000-000000000000
        - uuid: 11111111-1111-1111-1111-111111111111
        - uuid: { get_resource: encapsulation_network }
        - uuid: { get_resource: mgmt_network }
        - uuid: { get_resource: vxlan_network }
        - uuid: { get_resource: flat_network }
        - uuid: { get_resource: storage_network }
      config_drive: True
      user_data_format: RAW
    depends_on: compute3_volume1

  compute3_volume1_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: compute3 }
      mountpoint: /dev/xvdo
      volume_id: { get_resource: compute3_volume1 }
    depends_on: compute3


## ceph Nodes ##

  ceph1:
    type: "OS::Nova::Server"
    properties:
      image: { get_param: image }
      flavor: { get_param: ceph_flavor }
      key_name: { get_param: key_name }
      name: "ceph1"
      networks:
        - uuid: 00000000-0000-0000-0000-000000000000
        - uuid: 11111111-1111-1111-1111-111111111111
        - uuid: { get_resource: encapsulation_network }
        - uuid: { get_resource: mgmt_network }
        - uuid: { get_resource: storage_network }
        - uuid: { get_resource: storage_replication_network }
      config_drive: True
      user_data_format: RAW

  ceph1_volume1_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: ceph1 }
      mountpoint: /dev/xvdi
      volume_id: { get_resource: ceph1_volume1 }

  ceph1_volume2_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: ceph1 }
      mountpoint: /dev/xvdj
      volume_id: { get_resource: ceph1_volume2 }

  ceph1_volume3_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: ceph1 }
      mountpoint: /dev/xvdk
      volume_id: { get_resource: ceph1_volume3 }

  ceph1_volume4_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: ceph1 }
      mountpoint: /dev/xvdl
      volume_id: { get_resource: ceph1_volume4 }

  ceph1_volume5_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: ceph1 }
      mountpoint: /dev/xvdm
      volume_id: { get_resource: ceph1_volume5 }

  ceph2:
    type: "OS::Nova::Server"
    properties:
      image: { get_param: image }
      flavor: { get_param: ceph_flavor }
      key_name: { get_param: key_name }
      name: "ceph2"
      networks:
        - uuid: 00000000-0000-0000-0000-000000000000
        - uuid: 11111111-1111-1111-1111-111111111111
        - uuid: { get_resource: encapsulation_network }
        - uuid: { get_resource: mgmt_network }
        - uuid: { get_resource: storage_network }
        - uuid: { get_resource: storage_replication_network }
      config_drive: True
      user_data_format: RAW

  ceph2_volume1_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: ceph2 }
      mountpoint: /dev/xvdi
      volume_id: { get_resource: ceph2_volume1 }

  ceph2_volume2_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: ceph2 }
      mountpoint: /dev/xvdj
      volume_id: { get_resource: ceph2_volume2 }

  ceph2_volume3_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: ceph2 }
      mountpoint: /dev/xvdk
      volume_id: { get_resource: ceph2_volume3 }

  ceph2_volume4_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: ceph2 }
      mountpoint: /dev/xvdl
      volume_id: { get_resource: ceph2_volume4 }

  ceph2_volume5_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: ceph2 }
      mountpoint: /dev/xvdm
      volume_id: { get_resource: ceph2_volume5 }

  ceph3:
    type: "OS::Nova::Server"
    properties:
      image: { get_param: image }
      flavor: { get_param: ceph_flavor }
      key_name: { get_param: key_name }
      name: "ceph3"
      networks:
        - uuid: 00000000-0000-0000-0000-000000000000
        - uuid: 11111111-1111-1111-1111-111111111111
        - uuid: { get_resource: encapsulation_network }
        - uuid: { get_resource: mgmt_network }
        - uuid: { get_resource: storage_network }
        - uuid: { get_resource: storage_replication_network }
      config_drive: True
      user_data_format: RAW

  ceph3_volume1_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: ceph3 }
      mountpoint: /dev/xvdi
      volume_id: { get_resource: ceph3_volume1 }

  ceph3_volume2_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: ceph3 }
      mountpoint: /dev/xvdj
      volume_id: { get_resource: ceph3_volume2 }

  ceph3_volume3_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: ceph3 }
      mountpoint: /dev/xvdk
      volume_id: { get_resource: ceph3_volume3 }

  ceph3_volume4_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: ceph3 }
      mountpoint: /dev/xvdl
      volume_id: { get_resource: ceph3_volume4 }

  ceph3_volume5_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: ceph3 }
      mountpoint: /dev/xvdm
      volume_id: { get_resource: ceph3_volume5 }

## Swift Nodes ##

  swift1:
    type: "OS::Nova::Server"
    properties:
      image: { get_param: image }
      flavor: { get_param: swift_flavor }
      key_name: { get_param: key_name }
      name: "swift1"
      networks:
        - uuid: 00000000-0000-0000-0000-000000000000
        - uuid: 11111111-1111-1111-1111-111111111111
        - uuid: { get_resource: encapsulation_network }
        - uuid: { get_resource: mgmt_network }
        - uuid: { get_resource: storage_network }
        - uuid: { get_resource: storage_replication_network }
      config_drive: True
      user_data_format: RAW

  swift1_volume1_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: swift1 }
      mountpoint: /dev/xvdi
      volume_id: { get_resource: swift1_volume1 }

  swift1_volume2_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: swift1 }
      mountpoint: /dev/xvdj
      volume_id: { get_resource: swift1_volume2 }

  swift1_volume3_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: swift1 }
      mountpoint: /dev/xvdk
      volume_id: { get_resource: swift1_volume3 }

  swift1_volume4_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: swift1 }
      mountpoint: /dev/xvdl
      volume_id: { get_resource: swift1_volume4 }

  swift1_volume5_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: swift1 }
      mountpoint: /dev/xvdm
      volume_id: { get_resource: swift1_volume5 }

  swift2:
    type: "OS::Nova::Server"
    properties:
      image: { get_param: image }
      flavor: { get_param: swift_flavor }
      key_name: { get_param: key_name }
      name: "swift2"
      networks:
        - uuid: 00000000-0000-0000-0000-000000000000
        - uuid: 11111111-1111-1111-1111-111111111111
        - uuid: { get_resource: encapsulation_network }
        - uuid: { get_resource: mgmt_network }
        - uuid: { get_resource: storage_network }
        - uuid: { get_resource: storage_replication_network }
      config_drive: True
      user_data_format: RAW

  swift2_volume1_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: swift2 }
      mountpoint: /dev/xvdi
      volume_id: { get_resource: swift2_volume1 }

  swift2_volume2_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: swift2 }
      mountpoint: /dev/xvdj
      volume_id: { get_resource: swift2_volume2 }

  swift2_volume3_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: swift2 }
      mountpoint: /dev/xvdk
      volume_id: { get_resource: swift2_volume3 }

  swift2_volume4_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: swift2 }
      mountpoint: /dev/xvdl
      volume_id: { get_resource: swift2_volume4 }

  swift2_volume5_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: swift2 }
      mountpoint: /dev/xvdm
      volume_id: { get_resource: swift2_volume5 }

  swift3:
    type: "OS::Nova::Server"
    properties:
      image: { get_param: image }
      flavor: { get_param: swift_flavor }
      key_name: { get_param: key_name }
      name: "swift3"
      networks:
        - uuid: 00000000-0000-0000-0000-000000000000
        - uuid: 11111111-1111-1111-1111-111111111111
        - uuid: { get_resource: encapsulation_network }
        - uuid: { get_resource: mgmt_network }
        - uuid: { get_resource: storage_network }
        - uuid: { get_resource: storage_replication_network }
      config_drive: True
      user_data_format: RAW

  swift3_volume1_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: swift3 }
      mountpoint: /dev/xvdi
      volume_id: { get_resource: swift3_volume1 }

  swift3_volume2_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: swift3 }
      mountpoint: /dev/xvdj
      volume_id: { get_resource: swift3_volume2 }

  swift3_volume3_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: swift3 }
      mountpoint: /dev/xvdk
      volume_id: { get_resource: swift3_volume3 }

  swift3_volume4_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: swift3 }
      mountpoint: /dev/xvdl
      volume_id: { get_resource: swift3_volume4 }

  swift3_volume5_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: swift3 }
      mountpoint: /dev/xvdm
      volume_id: { get_resource: swift3_volume5 }

## LB Nodes ##

  lb1:
    type: "OS::Nova::Server"
    properties:
      image: { get_param: image }
      flavor: { get_param: lb_flavor }
      key_name: { get_param: key_name }
      name: "lb1"
      networks:
        - uuid: 00000000-0000-0000-0000-000000000000
        - uuid: 11111111-1111-1111-1111-111111111111
        - uuid: { get_resource: encapsulation_network }
        - uuid: { get_resource: mgmt_network }
      config_drive: True
      user_data_format: RAW


## Console Node ##

  console:
    type: "OS::Nova::Server"
    properties:
      image: { get_param: image }
      flavor: { get_param: console_flavor }
      key_name: { get_param: key_name }
      name: "console"
      networks:
        - uuid: 00000000-0000-0000-0000-000000000000
        - uuid: 11111111-1111-1111-1111-111111111111
        - uuid: { get_resource: encapsulation_network }
        - uuid: { get_resource: mgmt_network }
        - uuid: { get_resource: vxlan_network }
        - uuid: { get_resource: flat_network }
      config_drive: True
      user_data_format: RAW


## GW Node ##

  gw:
    type: "OS::Nova::Server"
    properties:
      image: { get_param: image }
      flavor: { get_param: gw_flavor }
      key_name: { get_param: key_name }
      name: "gw"
      networks:
        - uuid: 00000000-0000-0000-0000-000000000000
        - uuid: 11111111-1111-1111-1111-111111111111
        - uuid: { get_resource: encapsulation_network }
        - uuid: { get_resource: mgmt_network }
        - uuid: { get_resource: vxlan_network }
        - uuid: { get_resource: flat_network }
      config_drive: True
      user_data_format: RAW
