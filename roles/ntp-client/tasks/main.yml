---

- name: Update apt sources
  apt:
    update_cache: yes
    cache_valid_time: 3600
  register: apt_update
  until: apt_update|success
  retries: 5
  delay: 2
  when: ansible_os_family == "Debian"
  tags: 
    - update

- name: Ensure Chrony is installed
  package: 
    name: chrony
    state: present
  tags:
    - packages

- name: Debug ntp_server_ip
  debug: 
    var: ntp_server_ip
    verbosity: 2

- name: Gather facts for controller1
  become: no
  delegate_to: 127.0.0.1
  run_once: true
  shell: ansible controller1 -m setup
  tags:
    - facts

- name: Set ntp_server_ip Fact (eth3)
  set_fact:
    ntp_server_ip: "{{ hostvars['controller1']['ansible_eth3']['ipv4']['address'] }}"
  when: ansible_br_mgmt is not defined
  tags:
    - facts

- name: Set ntp_server_ip Fact (br_mgmt)
  set_fact:
    ntp_server_ip: "{{ hostvars['controller1']['ansible_br_mgmt']['ipv4']['address'] }}"
  when: ansible_br_mgmt is defined
  tags:
    - facts

- name: Debug ntp_server_ip
  debug:
    msg: ntp_server_ip fact is {{ ntp_server_ip }}
    verbosity: 2
  tags:
    - facts

- name: Configure chrony with template (Ubuntu)
  template: 
    src: ubuntu-chrony.conf 
    dest: /etc/chrony/chrony.conf
    backup: yes
  when: ansible_os_family == "Debian"
  notify: restart chrony
  tags:
    - configure

- name: Configure chrony with template (RedHat)
  template: 
    src: redhat-chrony.conf 
    dest: /etc/chrony.conf
    backup: yes
  when: ansible_os_family == "RedHat"
  notify: restart chronyd
  tags:
    - configure

- name: Ensure Chrony is running and set to auto start (Ubuntu)
  service: 
    name: chrony
    state: started 
    enabled: yes
  when: ansible_os_family == "Debian"
  tags:
    - service_status

- name: Ensure Chrony is running and set to auto start (RedHat)
  service: 
    name: chronyd
    state: started 
    enabled: yes
  when: ansible_os_family == "RedHat"
  tags:
    - service_status

- name: Sending a status update e-mail
  mail:
    host: '{{ host }}'
    port: '{{ port }}'
    secure:  '{{ secure }}'
    username: '{{ username }}'
    password: '{{ password }}'
    from: '{{ from }}'
    to: '{{ to }}'
    subject: '{{ subject_prefix }} NTP Client Installed on {{ ansible_hostname }}'
    body: NTP Client has been installed on {{ ansible_hostname }}
  when: send_mail | bool
  tags:
    - mail